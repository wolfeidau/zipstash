syntax = "proto3";

package cache.v1;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/rpc/status.proto";

// CacheService provides cache management operations
service CacheService {
  // CreateEntry creates a new cache entry
  rpc CreateEntry(CreateEntryRequest) returns (CreateEntryResponse) {}

  // UpdateEntry updates an existing cache entry
  rpc UpdateEntry(UpdateEntryRequest) returns (UpdateEntryResponse) {}

  // GetEntry retrieves a cache entry by key
  rpc GetEntry(GetEntryRequest) returns (GetEntryResponse) {}
}

// Error represents an error response
message Error {
  google.rpc.Status status = 1;
}

// Provider represents supported CI/CD providers
enum Provider {
  PROVIDER_UNSPECIFIED = 0;
  PROVIDER_GITHUB_ACTIONS = 1;
  PROVIDER_GITLAB = 2;
  PROVIDER_BUILDKITE = 3;
}

// Entry represents a cache entry in the system
message CacheEntry {
  string key = 1;
  int64 file_size = 2;
  string name = 3;
  string branch = 4;
  string compression = 5;
  string sha256sum = 6;
  string url = 7;
  repeated string paths = 8;
  google.protobuf.Timestamp entry_created = 9;
}

// Offset represents a part of a multipart upload/download
message Offset {
  int32 part = 1;
  int64 start = 2;
  int64 end = 3;
}

// CacheUploadInstruction contains instructions for uploading cache data
message CacheUploadInstruction {
  string url = 1;
  string method = 2;
  Offset offset = 3;
}

// CacheDownloadInstruction contains instructions for downloading cache data
message CacheDownloadInstruction {
  string url = 1;
  string method = 2;
  Offset offset = 3;
}

// CachePartETag represents a part's ETag in multipart operations
message CachePartETag {
  int32 part = 1;
  string etag = 2;
  int64 part_size = 3;
}

// CreateEntryRequest is the request for creating a cache entry
message CreateEntryRequest {
  Provider provider = 1;
  CacheEntry cache_entry = 2;
  bool multipart_supported = 3;
}

// CreateEntryResponse is the response for creating a cache entry
message CreateEntryResponse {
  string id = 1;
  repeated CacheUploadInstruction upload_instructions = 2;
  bool multipart = 3;
}

// UpdateEntryRequest is the request for updating a cache entry
message UpdateEntryRequest {
  Provider provider = 1;
  string id = 2;
  string name = 3;
  string branch = 4;
  string key = 5;
  repeated CachePartETag multipart_etags = 6;
}

// UpdateEntryResponse is the response for updating a cache entry
message UpdateEntryResponse {
  string id = 1;
}

// GetEntryRequest is the request for retrieving a cache entry
message GetEntryRequest {
  Provider provider = 1;
  string key = 2;
  string name = 3;
  string branch = 4;
}

// GetEntryResponse is the response for retrieving a cache entry
message GetEntryResponse {
  CacheEntry cache_entry = 1;
  repeated CacheDownloadInstruction download_instructions = 2;
  bool multipart = 3;
}
